#!/bin/bash
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
# Startup script for Traffic Server
#
# chkconfig: - 90 10
# description: Traffic Server is an HTTP proxy and cache.
# processname: traffic_server
# pidfile: /usr/local/var/trafficserver/internal/server.lock
# config: /usr/local/etc/records.config

# make avail helper functions 'action', 'killproc', 'status', etc
. /etc/rc.d/init.d/functions

###############################################################################
# CONFIGURATION VARIABLES BEGIN HERE

# when this file is installed as /etc/rc.d/init.d/trafficserver
# and added to the chkconfig system with `chkconfig --add trafficserver`
# then the default values of these variables can be overridden
# in the /etc/sysconfig/trafficserver file

# full path to the executable
PROGRAM=${PROGRAM:-/usr/local/bin/traffic_server}

# options to be passed into the program
OPTIONS=${OPTIONS:-}

# pid lock file to check for
PIDFILE=${PIDFILE:-/usr/local/var/trafficserver/internal/server.lock}

# stdout file of executable
STDOUTLOG=${STDOUTLOG:-/usr/local/var/log/traffic_server.stdout}

# stderr file of executable
STDERRLOG=${STDERRLOG:-/usr/local/var/log/traffic_server.stderr}

# number of times to retry check on pid lock file
PIDFILE_CHECK_RETRIES=${PIDFILE_CHECK_RETRIES:-30}

# END OF CONFIGURATION VARIABLES
###############################################################################

# get the basename of the program
prog=${PROGRAM##*/}

# launches $* in the background
# and checks if program creates its own pid lock file
# redirects stdout and stderr to files 
# this function is meant to substitute 'daemon'
# because 'daemon' expects $1 to fork itself
forkdaemon() {
  local i=0

  # launch in background, i.e. fork
  # and redirect stdout and stderr to files
  $* >> $STDOUTLOG 2>> $STDERRLOG &

  while (( $i < $PIDFILE_CHECK_RETRIES ))
  do

    # check for regular file and size greater than 0
    if [[ -f $PIDFILE ]] && [[ -s $PIDFILE ]]
    then
      success
      return 0
    fi

    sleep 1  # zzz for 1 second
    (( i++ ))

  done

  failure
  return 1
}

# main processing block of this service script
case "$1" in
  start)
    action "Starting $prog:" forkdaemon $PROGRAM $OPTIONS
    ;;
  stop)
    action "Stopping $prog:" killproc -p $PIDFILE $PROGRAM
    ;;
  status)
    status -p $PIDFILE $PROGRAM
    ;;
  restart)
    $0 'stop'
    $0 'start'
    ;;
  condrestart)
    if ! $0 'status'
    then
      $0 'stop'
      $0 'start'
    fi
    ;;
  *)
    echo "Usage: $0 {start|stop|status|restart|condrestart}"
    exit 1
esac

